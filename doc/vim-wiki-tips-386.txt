*vim-wiki-tips-386.txt*   Cut/copy and paste using visual selection *vwt-386*

Tip 386 [https://vim.fandom.com/wiki/Cut/copy_and_paste_using_visual_selection]   Previous |vwt-385| Next |vwt-387|

created 2002 · complexity basic · author rainbrot · version 6.0

==============================================================================

Visual selection is a common feature in applications, but Vim's visual 
selection has several benefits.

To cut-and-paste or copy-and-paste:

Visual selection (steps 1-3) can be performed using a mouse.

If you want to change the selected text, press c instead of d or y in step 4. 
In a visual selection, pressing c performs a change by deleting the selected 
text and entering insert mode so you can type the new text.

PASTING OVER A BLOCK OF TEXT            *vwt-386-pasting-over-a-block-of-text*

You can copy a block of text by pressing Ctrl-v (or Ctrl-q if you use Ctrl-v 
for paste), then moving the cursor to select, and pressing `y` to yank. Now 
you can move elsewhere and press `p` to paste the text after the cursor (or 
`P` to paste before). The paste inserts a block (which might, for example, be 
4 rows by 3 columns of text).

Instead of inserting the block, it is also possible to replace (paste over) 
the destination. To do this, move to the target location then press `1vp` 
(`1v` selects an area equal to the original, and `p` pastes over it).

When a count is used before `v`, `V`, or `^V` (character, line or block 
selection), an area equal to the previous area, multiplied by the count, is 
selected. See the paragraph after :help |<LeftRelease>|.

Note that this will only work if you actually did something to the previous 
visual selection, such as a yank, delete, or change operation. It will not 
work after visually selecting an area and leaving visual mode without taking 
any actions.

SEE ALSO                                                    *vwt-386-see-also*
    - Visual selection [https://vim.fandom.com/wiki/Visual_selection] 
    - Copy, cut and paste [https://vim.fandom.com/wiki/Copy,_cut_and_paste] 


COMMENTS                                                    *vwt-386-comments*



I have struck out the above new comment because I think it is talking about something that may apply to those who have used :behave mswin. To visually select multiple lines, you type V, then press j (or cursor down). You hold down Shift only to type the uppercase V. Do not press Shift after that. If I am wrong, please explain here. JohnBeckett 10:48, October 7, 2010 (UTC)

==============================================================================

If you just want to copy (yank) the visually marked text, you do not need to 
'y'ank it. Marking it will already copy it.

Using a mouse, you can insert it at another position by clicking the middle 
mouse button.

This also works in across Vim applications on Windows systems (clipboard is 
inserted)

==============================================================================

This is a really useful thing in Vim. I feel lost without it in any other 
editor. I have some more points I'd like to add to this tip:
    - While in (any of the three) Visual mode(s), pressing 'o' will move the cursor 
      to the opposite end of the selection. In Visual Block mode, you can also press 
      'O', allowing you to position the cursor in any of the four corners. 
    - If you have some yanked text, pressing 'p' or 'P' while in Visual mode will 
      replace the selected text with the already yanked text. (After this, the 
      previously selected text will be yanked.) 
    - Press 'gv' in Normal mode to restore your previous selection. 
    - It's really worth it to check out the register functionality in Vim: ':help 
      registers'. 
    - If you're still eager to use the mouse-juggling middle-mouse trick of common 
      unix copy-n-paste, or are into bending space and time with i_CTRL-R<reg>, 
      consider checking out ':set paste' and ':set pastetoggle'. (Or in the latter 
      case, try with i_CTRL-R_CTRL-O..) 


==============================================================================

You can replace a set of text in a visual block very easily by selecting a 
block, press c and then make changes to the first line. Pressing <Esc> twice 
replaces all the text of the original selection. See :help |v_b_c|.

==============================================================================

On Windows the <mswin.vim> script seems to be getting sourced for many users.

Result: more Windows like behavior (ctrl-v is "paste", instead of 
visual-block selection). Hunt down your system vimrc and remove sourcing 
thereof if you don't like that behavior (or substitute <mrswin.vim> in its 
place, see VimTip63 |vwt-63|.

With VimTip588 |vwt-588| one can sort lines or blocks based on visual-block 
selection.

==============================================================================

With reference to the earlier post asking how to paste an inner block

==============================================================================

The "yank" buffers in Vim are not the same as the Windows clipboard (i.e., 
cut-and-paste) buffers. If you're using the yank, it only puts it in a Vim 
buffer - that buffer is not accessible to the Windows paste command. You'll 
want to use the Edit | Copy and Edit | Paste (or their keyboard equivalents) 
if you're using the Windows GUI, or select with your mouse and use your 
X-Window cut-n-paste mouse buttons if you're running UNIX.

==============================================================================

Double-quote and star gives one access to windows clippboard or the unix 
equivalent. as an example if I wanted to yank the current line into the 
clipboard I would type "*yy

If I wanted to paste the contents of the clippboard into Vim at my current 
curser location I would type "*p

The double-qoute and start trick work well with visual mode as well. ex: 
visual select text to copy to clippboard and then type "*y

I find this very useful and I use it all the time but it is a bit slow typing 
"* all the time so I am thinking about creating a macro to speed it up a bit.

==============================================================================

Copy and Paste using the System Clipboard

There are some caveats regarding how the "*y (copy into System Clipboard) 
command works. We have to be sure that we are using vim-full (sudo aptitude 
install vim-full on debian-based systems) or a Vim that has X11 support 
enabled. Only then will the "*y command work.

For our convenience as we are all familiar with using Ctrl+c to copy a block 
of text in most other GUI applications, we can also map Ctrl+c to "*y so that 
in Vim Visual Mode, we can simply Ctrl+c to copy the block of text we want 
into our system buffer. To do that, we simply add this line in our .vimrc 
file:

map <C-c> "+y<CR>

Restart our shell and we are good. Now whenever we are in Visual Mode, we can 
Ctrl+c to grab what we want and paste it into another application or another 
editor in a convenient and intuitive manner.

 vim:tw=78:et:ft=help:norl: