*vim-wiki-tips-1127.txt*   Fast one session mapping *vwt-1127*



Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 1127 [https://vim.fandom.com/wiki/Fast_one_session_mapping]   Previous |vwt-1126| Next |vwt-1128|

created February 10, 2006 · complexity basic · author Marc Weber · version 
5.7

==============================================================================

>
    " A little nice idea I got today...
    "
    " I've noticed that I often use one session mappings .. Sometimes :bn
    " sometimes :make specialtarget
    " in each case I need it often.
    " vim supports this by @: but there are cases when I want to press one key only
    " and other cases I want to user other commands as well.
    " Having to type :map <F5> :<cmd><CR> does need some time and I'm lazy ;-)
    " So just copy this text, put it into .vim/plugins/mapFromF1ToF12.vim and enjoy
    " Try
    " :echo "dummy"<CR>
    " <F5>
    " now you can use F5 to execute :echo "dummy"
    " Perhaps you want to have mappings local to your buffer only.
    " Then use map <buffer> and unmap <buffer> instead
    
    function MapLastCommandToKeys(keysToMapTo)
      exe "unmap ".a:keysToMapTo
      exe "map ".a:keysToMapTo." :".histget("cmd")."<CR>"
    endfunction
    
    function PrepareMap(keysToMapTo)
      exe "map ".a:keysToMapTo." :call MapLastCommandToKeys('".a:keysToMapTo."')<CR>"
    endfunction
    
    " This will allow you to use F1
    PrepareMap('<F1>')
    " This while loop will allow you to use F2,F3,..,F12
    let i=2
    while i<13
      call PrepareMap('<F'.i.'>')
      let i=i+1
    endwhile
    " of cause you can use any mapping eg \a:
    PrepareMap("\a")
<

COMMENTS  *vwt-1127-comments*

Recordings can do much more (encompassing other modes) than handle :cmd-line 
executions. They can also be repeated. See :help |complex-repeat|.

From normal mode,

==============================================================================

 vim:tw=78:et:ft=help:norl: