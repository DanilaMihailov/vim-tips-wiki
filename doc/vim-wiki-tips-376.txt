*vim-wiki-tips-376.txt*   Building Vim *vwt-376*

Tip 376 [https://vim.fandom.com/wiki/Building_Vim]   Previous |vwt-375| Next |vwt-378|

created 2002 · complexity basic · version 7.0

==============================================================================

This tip presents an overview of how to download the source for Vim, then 
build a Vim executable, and install it on your system. You need to download 
the C source code and the runtime files (standard plugins, help files, and 
more). You may also need to download dependencies (packages required for 
building), and you will need a compiler/linker (free versions are available 
for almost all systems). See where to download Vim 
[https://vim.fandom.com/wiki/Where_to_download_Vim] if you want to download 
the Vim program to run on your system, without building it yourself.

ANY PLATFORM                                            *vwt-376-any-platform*

It is easy to build Vim from the source code. In general, it takes four 
steps:

BUILDING VIM ON UBUNTU                        *vwt-376-building-vim-on-ubuntu*

You need the required development packages on Ubuntu to build the GUI:

>
    sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \
      libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \
      libcairo2-dev libx11-dev libxpm-dev libxt-dev
<

For ruby support, you need for package ruby-dev:

>
    sudo apt-get install ruby-dev
<

Commands to build and install GUI Vim:

>
    $ cd vim7
    $ cd src
    $ make distclean
    $ ./configure --with-features=huge --enable-gui=gnome2
    $ make
    $ sudo make install
<

BUILDING VIM .DEBS ON UBUNTU/DEBIAN (OUTDATED) *vwt-376-building-vim-.debs-on-ubuntu/debian-(outdated)*

Commands to get started and build the first time.

>
    $ sudo apt-get install mercurial libssl-dev
    $ sudo apt-get build-dep vim
    $ hg clone http://hg.debian.org/hg/pkg-vim/vim
    $ cd vim
    $ hg checkout unstable
    $ debian/rules update-orig
    $ dpkg-buildpackage -i -I
    $ cd ..
<

And to update Vim .debs

>
    $ cd vim
    $ hg pull
    $ hg update
    $ debian/rules update-orig
    $ dpkg-buildpackage -i -I
    $ cd ..
<

BUILDING VIM ON WINDOWS                      *vwt-376-building-vim-on-windows*

There are a couple options for a compiler on Windows. Vim ships with 
makefiles for Cygwin, MinGW, and Visual Studio. Visual Studio express is free 
to download and use from Microsoft and should work with the supplied makefile.

In general, you will invoke a make program and pass in the desired build 
options, like:

>
    make FEATURES=HUGE GUI=yes gvim.exe
<

Some more details and examples here:
    - Build Vim in Windows with Cygwin 
      [https://vim.fandom.com/wiki/Build_Vim_in_Windows_with_Cygwin] 
    - Build Vim in Windows with Visual Studio 
      [https://vim.fandom.com/wiki/Build_Vim_in_Windows_with_Visual_Studio] 
    - Build Python-enabled Vim on Windows with MinGW 
      [https://vim.fandom.com/wiki/Build_Python-enabled_Vim_on_Windows_with_MinGW] 


After you've built Vim, run the compiled executable and do `:version` to 
verify it built as you intended. Then you're ready to install; close the Vim 
instance before you continue.

One option is to just install manually every time without any nice installer 
options like having .bat files in your system path to launch Vim from the 
command line, a default _vimrc, shell context-menu "Edit with Vim" item, etc.:
    - Version independent installation of Vim on Windows 
      [https://vim.fandom.com/wiki/Version_independent_installation_of_Vim_on_Windows] 


But most of the time you want to install Vim somewhere everybody on the 
computer can use it, and integrate it as if you installed from Bram's binary.

To do this, see the details in the INSTALLpc.txt file in the src directory of 
the code you downloaded. Basically it all boils down to:

This will put Vim into a spot everybody can use it, and give you options to 
create default _vimrc, user config areas, .bat files for command-line use, 
"edit with Vim" context menu, etc.

MISCELLANEOUS                                          *vwt-376-miscellaneous*

In Vim, the command `:version` includes "Compiled by user@host" (the user and 
computer host names are provided by the operating system).

The configuration option `--with-compiledby` can be used to set the exact 
"Compiled by" text (for example, to include an email address).

If you are using Perlbrew and want to build Vim with perl (and why wouldn't 
you want that if you are using Perlbrew?) you must disable Perlbrew before 
building with `$ perlbrew off` and build with system perl, which hopefully 
isn't too outdated. As of early 2016 Ubuntu is at 5.18 which isn't all that 
bad!

USING PATCHES                                          *vwt-376-using-patches*

Following works but is obsolete; see above for information on using Mercurial.
The following applies to Unix-based systems, and Windows.

Download the source from `ftp://ftp.vim.org/pub/vim/unix/ 
[ftp://ftp.vim.org/pub/vim/unix/]`
    - `vim-7.2.tar.bz2` (7.1MB) 


Download the extras from `ftp://ftp.vim.org/pub/vim/extra/ 
[ftp://ftp.vim.org/pub/vim/extra/]`
    - `vim-7.2-extra.tar.gz` (0.8MB) 
    - `vim-7.2-lang.tar.gz` (1.4MB) 


Expand each in the same directory, for example `somewhere/vim/build/72/`

Download the patches from `ftp://ftp.vim.org/pub/vim/patches/7.2/ 
[ftp://ftp.vim.org/pub/vim/patches/7.2/]`

Apply the patches.

Configure.

Build (compile and link).

Install.

SEE ALSO                                                    *vwt-376-see-also*

Tips, some of which need updating
    - Building vim with color on HP-UX 
      [https://vim.fandom.com/wiki/Building_vim_with_color_on_HP-UX] 
    - Compile a separate copy of Vim for Python coding 
      [https://vim.fandom.com/wiki/Compile_a_separate_copy_of_Vim_for_Python_coding] 
    - Getting the Vim source with Mercurial 
      [https://vim.fandom.com/wiki/Getting_the_Vim_source_with_Mercurial] 
    - Get latest releases for syntax highlighting, runtime, plugins etc 
      [https://vim.fandom.com/wiki/Get_latest_releases_for_syntax_highlighting,_runtime,_plugins_etc] 
    - Category of tips for building Vim 
      [https://vim.fandom.com/wiki/Category:Building_Vim] 


External sites with how-to information on building Vim
    - on Windows [http://users.skynet.be/antoine.mechelynck/vim/compile.htm] 
    - on Unix/Linux [http://users.skynet.be/antoine.mechelynck/vim/compunix.htm] 


COMMENTS                                                    *vwt-376-comments*

TO DO
    - Where to get other stuff included in the standard installation, like 
      `diff.exe`. 


Merge or link to some of these?
    - 636 Adding Vim to MS-Windows File Explorer Menu |vwt-636| 
    - 861 Right click in Windows Explorer to open gvim in explorer mode |vwt-861| 
    - 1003 Windows file associations |vwt-1003| 
    - 1225 Open files in multiple tabs using the Windows Context Menu |vwt-1225| 
    - 1314 Add open-in-tabs context menu for Windows |vwt-1314| 
    - 1542 Vim On Vista |vwt-1542| (the introductory para) 


The only tip with info on diff.exe is:
    - 416 Running diff |vwt-416| 


==============================================================================

Make sure the library names are correct for all or most distributions. In the 
Linux dist I'm using it seems the libraries are named <X>-devel instead of 
<X>-dev. Michael Greene [https://vim.fandom.com/wiki/User:Michael_Greene] 
15:50 Feb 27, 2011 (UTC)

 vim:tw=78:et:ft=help:norl: