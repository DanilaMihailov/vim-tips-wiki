*vim-wiki-tips-1665.txt*   Using ZSH completion with ctags and Vim *vwt-1665*

Tip 1665 [https://vim.fandom.com/wiki/Using_ZSH_completion_with_ctags_and_Vim]   Previous |vwt-1664| Next |vwt-1666|

created 
[https://vim.fandom.com/wiki/Vim_Tips_Wiki:New_tips/201008#Using_ZSH_completion_with_ctags_and_Vim] 
August 16, 2010 · complexity basic · author Elementalvoid · version 7.0

==============================================================================

More explaining please!

While the scripts in this tip may be very useful, nobody who isn't familiar 
with the subject matter will know what they do or why. This tip may need:
    - a problem statement explaining—in layman's terms—what the problem is that is 
      solved by this tip 
    - a "do it yourself" example showing how to do it manually without a 
      complicated script, and telling why this may not be sufficient 
    - explanations of how the script works at a basic level 
    - comments in the script itself for the complicated bits 


This tip was inspired by a tip on using bash completion with ctags 
[https://vim.fandom.com/wiki/Using_bash_completion_with_ctags_and_Vim].

This implementation is significantly simpler but gets the basic job done. The 
only downside that I see is that it does not work in concert with the other 
Vim completions for zsh. For example, if you type 'vim -o somefile.sh -t' then 
press the Tab key, it will not provide completions. It must be 'vim -t' then 
Tab to work.

COMPLETING CTAGS WITH ZSH  *vwt-1665-completing-ctags-with-zsh*

Add the following to your ~/.zshrc file:

>
    #vim tags
    function _get_tags {
      [ -f ./tags ] || return
      local cur
      read -l cur
      echo $(echo $(awk -v ORS=" "  "/^${cur}/ { print \$1 }" tags))
    }
    compctl -x 'C[-1,-t]' -K _get_tags -- vim
    #end vim tags
<

Then start a new shell or source your rc file:

>
    source ~/.zshrc
<

WHAT IT DOES  *vwt-1665-what-it-does*

Once you start a new shell or source your rc file, you can do

>
    ~$ vim -t MyC<tab key>
<

and it will auto-complete the tag the same way it does for files and 
directories:

>
    MyClass MyClassFactory
    ~$ vim -t MyC
<

I find this really useful when I'm jumping into a quick bug fix.

SEE ALSO  *vwt-1665-see-also*
    - Using bash completion with ctags and Vim 
      [https://vim.fandom.com/wiki/Using_bash_completion_with_ctags_and_Vim] 


COMMENTS  *vwt-1665-comments*
    - Cool! How would I do this using the new compsys (compdef?) instead of the old 
      compctl? 

    - It didn't work for me. The problem was that "$cur" was being populated with 
      "vim -t", which most likely would not match anything in the tags file. I used 
      the following, 


>
    #vim tags
    function _get_tags {
      [ -f ./tags ] || return
      local cur
      read -l cur
      cur=`echo $cur | grep -o -- "-t[[:space:]]\+[[:alnum:]]\+" | cut -d' ' -f2`
      reply=(${=$(cat ./tags | grep "^${cur}" | cut -f1)})
    }
    compctl -x 'C[-1,-t]' -K _get_tags -- vim
    #end vim tag
<

 vim:tw=78:et:ft=help:norl: