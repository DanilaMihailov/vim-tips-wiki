*vim-wiki-tips-437.txt*   Extending keywords *vwt-437*



Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 437 [https://vim.fandom.com/wiki/Extending_keywords]   Previous |vwt-436| Next |vwt-438|

created March 7, 2003 · complexity intermediate · author hzp · version 6.0

==============================================================================

Sometimes when you are working with an extended language (such as uC++) there 
exist keywords that are not included as keywords in the vim release, so you 
can easily update keywords in two ways.

1. edit your c.vim file [if you are coding c/c++] try 'vim61/runtime/syntax/' 
for location of these files, and add the keywords in the correct groups,

2. the second way is you can put them all in a separate file, and source it, 
eg: say i had some new c types, called uTask or uMutex i could get them 
highlighted as types using the following command:

>
    :syn keyword type uTask uMutex uNoMutex [etc..]
<

COMMENTS  *vwt-437-comments*

Rather than editing an existing syntax file which will get overwritten every 
time you upgrade to a newer revision or version of Vim, it's better if you 
simply create a file in the after/syntax directory (anywhere inside the 
'runtimepath') that has the same name as the file you're enhancing (c.vim, for 
example).

See :help 'runtimepath' for more details on both the runtimepath as well as 
the order in which files are loaded (which explains why the "after" directory 
works).

==============================================================================

 vim:tw=78:et:ft=help:norl: