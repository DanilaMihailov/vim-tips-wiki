*vim-tips-wiki-194.txt*   Inserting text in multiple lines              *vtw-194*

Tip 194 [https://vim.fandom.com/wiki/Inserting_text_in_multiple_lines]   Previous |vtw-193| Next |vtw-195|

created 2002 · complexity basic · author Gergely Kontra · version 6.0

==============================================================================

In visual block mode, you can press `I` to insert text at the same position 
in multiple lines, and you can press `A` to append text to each line in a 
block. As well as inserting or appending text that you type, you can insert or 
append text from registers, for example, the clipboard. The substitute command 
can also be used to insert or append text.

In Vim, check that you have the blockwise-operators feature (`I`, `A`, and 
more) by entering the `:version` command. The output should include 
`+visualextra`. :help |+visualextra|

INSERT                                                        *vtw-194-insert*

For example, suppose you have some Vim script:

>
    let a = 2
    let b = 3
    let c = 4
<

You may want to make these variables script-wise (by inserting "`s:`" before 
each variable name, so "`a`" becomes "`s:a`" etc). To do this, move to the `a` 
in the first line, then press Ctrl-V (or Ctrl-Q if you use Ctrl-V for paste), 
then `jj` to select a visual block over three lines (also see here 
[https://stackoverflow.com/a/253391/293064] for succinct instructions with the 
exact keystroke sequence).

Now type `I` to start a special form of insert mode, then type the wanted 
text (`s:`). When you press Esc to exit from insert mode, the text will be 
inserted in the same position on each of the lines affected by the visual 
block selection.

Instead of inserting text that you type, you may want to insert the contents 
of a register. To do this, select the visual block and press `I` as before. 
Now press Ctrl-R then the character identifying the register. For example, 
press Ctrl-R then `"` to insert the unnamed register (the last yanked or 
deleted text), or press Ctrl-R then `+` to insert the clipboard.

While in insert mode, typing Ctrl-R then `"` inserts the unnamed register as 
if you had typed the characters. For example, if one of the characters is 
Ctrl-H (the code for Backspace), the character will delete the preceding 
character. If you want to actually insert all characters, including special 
codes such as Ctrl-H, you need to press Ctrl-R twice (Ctrl-R Ctrl-R `"`).

APPEND                                                        *vtw-194-append*

In a visual block, you can insert text in each line before the selection with 
`I`, and you can append text in each line after the selection with `A`. If you 
use `$` to convert the visual selection to select to the end of line, then `A` 
will append text to the end of each line in the visual block.

For example, suppose the clipboard contains "Hello world." and you have three 
lines:

>
    First.
    This is the second line.
    The third.
<

To insert " Hello world." (space + clipboard) at the end of each of these 
lines:
    - On a character in the first line, press Ctrl-V (or Ctrl-Q if Ctrl-V is 
      paste). 
    - Press `jj` to extend the visual block over three lines. 
    - Press `$` to extend the visual block to the end of each line. 
    - Press `A` then space then Ctrl-R then `+` then Esc. 


The result is:

>
    First. Hello world.
    This is the second line. Hello world.
    The third. Hello world.
<

SEARCH AND REPLACE                                *vtw-194-search-and-replace*

The substitute command can be used to insert (or replace) text. Some 
examples:

By default, each command operates on the current line. If you visually select 
some text before entering the command, it will operate on each line in the 
visual selection. See Search and replace 
[https://vim.fandom.com/wiki/Search_and_replace] for details.Or you can insert 
a range |[range]| immediately after the colon, for instance `:.-5,$s/` etc. to 
substitute from 5 lines above the cursor to the end of the file.

SEE ALSO                                                    *vtw-194-see-also*
    - Macros [https://vim.fandom.com/wiki/Macros] 
    - Repeat last change [https://vim.fandom.com/wiki/Repeat_last_change] 
    - Search and replace in a visual selection 
      [https://vim.fandom.com/wiki/Search_and_replace_in_a_visual_selection] 


REFERENCES                                                *vtw-194-references*
    - :help |v_b_A| 
    - :help |v_b_I| 
    - :help |i_CTRL-R| 
    - :help |i_CTRL-R_CTRL-R| 


COMMENTS                                                    *vtw-194-comments*

CATEGORIES                                                      *vtw-194-cats*

Usage |vtw-by-category-usage|


 vim:tw=78:et:ft=help:norl: