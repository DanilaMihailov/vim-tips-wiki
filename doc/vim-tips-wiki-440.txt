*vim-tips-wiki-440.txt*   Automatic formatting of paragraphs            *vtw-440*

Tip 440 [https://vim.fandom.com/wiki/Automatic_formatting_of_paragraphs]   Previous |vtw-438| Next |vtw-441|

created 2003 · complexity basic · author Stanislav Sitar · version 6.0

==============================================================================

When editing a plain-text file (not a program) it can be useful to have lines 
automatically broken when a certain length is reached. For example, the 
following command sets the current buffer so that lines longer than 60 
characters are broken (a newline is automatically inserted):

>
    :setlocal textwidth=60
    " Following (using abbreviations) is equivalent.
    :setl tw=60
<

FORMATTING A PARAGRAPH                        *vtw-440-formatting-a-paragraph*

You may edit a paragraph consisting of several lines. When finished editing, 
some lines may be shorter than required. To fix this, in normal mode, type 
`gqip` to format the "inner paragraph". In this context, "format" means to 
reflow the paragraph so that all lines are the optimal length.

Alternatively, format options can be set so that a paragraph is reflowed 
automatically, after each change. :help |auto-format|

An example setting for `formatoptions` (`fo`) is:

>
    :setl fo=aw2tq
<

COMMENTS                                                    *vtw-440-comments*

TO DO
    - Explain what above `fo` does, and how to configure so paragraphs do not have 
      the first line indented, and are separated by a blank line. 
    - Discuss `:setl fo+=a` and `:setl fo-=a`. 
    - Incorporate following comments. 
    - For CJK/Asian language, `:set fo+=m` will break line at double width chars 
      too. 


==============================================================================

Sometimes it is useful to keep each paragraph as one long line (that is, do 
not break the paragraph into lines). See these related tips:
    - 38 Move cursor by display lines when wrapping |vtw-38| 
    - 989 Word wrap without line breaks |vtw-989| 


The following sets the current buffer so that long lines are automatically 
wrapped on the screen, with lines only breaking at a space. The mappings move 
the cursor up/down by screen lines instead of by file lines. There is a space 
following the backslash for the 'breakat' option (the `set` command requires a 
backslash before each space). Each long line will be displayed on the screen 
as multiple lines.

>
    setlocal wrap nolist linebreak breakat=\ 
    nnoremap j gj
    nnoremap k gk
    vnoremap j gj
    vnoremap k gk
<

==============================================================================

Automatically inserting line breaks is a disaster when editing programs, but 
is very good for editing a text file. With the following in your vimrc 
[https://vim.fandom.com/wiki/Vimrc], the settings will only be applied to 
*.txt files:

>
    au BufEnter *.txt setl tx ts=4 sw=4 fo+=n2a
<

==============================================================================

If you make a change to a wrapped paragraph and need to re-format it, you can 
use `gq` followed by a movement over the area you want to re-format, e.g. `3j` 
or `}`.

Automatic text wrapping and re-formatting with `gq` can work on comments 
lines also, provided the value of the 'comments' option is set correctly.

CATEGORIES                                                      *vtw-440-cats*

Todo |vtw-by-category-todo|


 vim:tw=78:et:ft=help:norl: