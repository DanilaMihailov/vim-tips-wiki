*vim-wiki-tips-787.txt*   Invoke a function with a count prefix *vwt-787*



Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 787 [https://vim.fandom.com/wiki/Invoke_a_function_with_a_count_prefix]   Previous |vwt-786| Next |vwt-789|

created 2004 · complexity intermediate · author Luc St-Louis · version 5.7

==============================================================================

Suppose you have a function requiring a count argument, and you would like to 
be able to invoke it with a mapping, and also allow the count to be prefixed 
to the mapping, like you can with for example {count}CTRL-^ (to edit the 
[count]th file in the buffer list).

Here is an example of code that can be used to call a Foo() function with 
such a prefix count argument. All it shows is the structure required for such 
a thing to work (well, it's the best the author of the tip was able to come up 
with). Given the following, typing 42,a will echo FOO: 42:

>
    function! Foo(count)
      echo 'FOO: ' . a:count
    endfunction
    
    command! -nargs=1 FooCmd call Foo(<args>)
    map ,a :<C-U>FooCmd(v:count)<CR>
<

REFERENCES  *vwt-787-references*
    - :help  |v:count|


COMMENTS  *vwt-787-comments*

It's simpler if you use ":call", then you don't need to use "command". I have 
something like the following in my vimrc.

>
    nmap ,a :<C-U>call Foo(v:count)
    [...]
       function Foo(amount)
          execute "set columns +=" . a:amount
       endfunction
<