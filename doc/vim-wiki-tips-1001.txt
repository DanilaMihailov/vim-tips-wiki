*vim-wiki-tips-1001.txt*   Save buffer without changing Last Modified attribute *vwt-1001*



Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 1001 [https://vim.fandom.com/wiki/Save_buffer_without_changing_Last_Modified_attribute]   Previous |vwt-999| Next |vwt-1003|

created 2005 · complexity basic · author Craig Emery · version 5.7

==============================================================================

There are times when I change something in a file and I've no need for the 
file's "last modified" time to be changed. For example, I might be updating a 
comment in a source file, and I don't need my build system to re-compile the 
file.

If your build of Vim has +python you can define the following function and 
call it instead of using the write command.

>
    function! WritePreserveMtime()
    python << EEOOFF
    import vim
    import os.path
    import os
    fpath = vim.current.buffer.name
    atime = os.path.getatime(fpath)
    mtime = os.path.getmtime(fpath)
    vim.command("w")
    os.utime(fpath, (atime, mtime))
    EEOOFF
    endfunction
<

See :help |python| for information on calling Python from inside Vim.

Since I

>
    :map <F3> :w<CR><C-G>
<

I also

>
    :map <S-F3> :call WritePreserveMtime()<CR><C-G>
<

COMMENTS  *vwt-1001-comments*

 vim:tw=78:et:ft=help:norl: