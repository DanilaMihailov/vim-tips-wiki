*vim-wiki-tips-1455.txt*   Jumps to a local/global definition by same key *vwt-1455*



Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 1455 [https://vim.fandom.com/wiki/Jumps_to_a_local/global_definition_by_same_key]   Previous |vwt-1454| Next |vwt-1456|

created 2007 · complexity basic · author Shotaro Aoyama · version n/a

==============================================================================

When you want to jump to a definition of a variable, what do you do? Use C-] 
or gd?

C-] finds only global variables (and functions; ctags extracts only global 
objects).

On the other hand, gd detects only local variables.

I think it's a bit complicated to choose between them. So I wrote this 
function:

>
    function! GoDefinition()
      let l:pos = getpos('.')
      normal! gd
      if getpos('.') == l:pos
        execute 'tag' expand('<cword>')
      endif
    endfunction
    nnoremap <C-]> :<C-U>call GoDefinition()<CR>
<

This function first does gd to try to find a local definition of a variable 
under the cursor, and if it failed then probably the variable is a global 
variable, so it tries :tag.

This way, you can jump to the definition of both local and global variables 
with the same key.

COMMENTS  *vwt-1455-comments*