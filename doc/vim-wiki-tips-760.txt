*vim-wiki-tips-760.txt*   Change font size quickly *vwt-760*







This tip is very similar to the following:
    - VimTip414 |vwt-414|


These tips need to be merged – see the merge guidelines 
[https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].Tip 760 [https://vim.fandom.com/wiki/Change_font_size_quickly]   Previous |vwt-759| Next |vwt-761|

created 2004 · complexity intermediate · author Wouter Bolsterlee · version 
6.0

==============================================================================

If you regularly switch to a larger or smaller font, for example because 
someone looking at your code thinks the letters are too small, or because you 
want to lay back in your chair while reading, this tip is for you.

The following script defines two commands, :LargerFont and :SmallerFont, to 
allow quick adjustments to the font size used in the gtk2 gui. Change 
minfontsize and maxfontsize to suit your needs. See below for alternative 
solutions.

To use this script, put the following code into 
~/.vim/plugin/gtk2fontsize.vim or in your vimrc.

>
    let s:pattern = '^\(.* \)\([1-9][0-9]*\)$'
    let s:minfontsize = 6
    let s:maxfontsize = 16
    function! AdjustFontSize(amount)
      if has("gui_gtk2") && has("gui_running")
        let fontname = substitute(&guifont, s:pattern, '\1', '')
        let cursize = substitute(&guifont, s:pattern, '\2', '')
        let newsize = cursize + a:amount
        if (newsize >= s:minfontsize) && (newsize <= s:maxfontsize)
          let newfont = fontname . newsize
          let &guifont = newfont
        endif
      else
        echoerr "You need to run the GTK2 version of Vim to use this function."
      endif
    endfunction
    
    function! LargerFont()
      call AdjustFontSize(1)
    endfunction
    command! LargerFont call LargerFont()
    
    function! SmallerFont()
      call AdjustFontSize(-1)
    endfunction
    command! SmallerFont call SmallerFont()
<

RELATED PLUGINS  *vwt-760-related-plugins*

As an alternative, you could use one of these plugins which work with fonts 
on Unix and Windows systems:
    - quickfonts.vim [https://www.vim.org/scripts/script.php?script_id=202] : quickly switch between a list of favorite fonts, manage list of favorite fonts
    - guifont++.vim [https://www.vim.org/scripts/script.php?script_id=593] : Vim plugin for quickly changing GUI font size
    - fontsize [https://www.vim.org/scripts/script.php?script_id=2809] : Vim plugin for adjusting GUI font size via "font size" mode single-key shortcuts


MAPPING SOLUTION  *vwt-760-mapping-solution*

Another alternative is to use the following mappings which use a clever 
substitute (no functions are required). This example works using gvim under 
Windows, where the command :set guifont? would show the font name and :h12 if 
the font size is 12 points, for example.

>
    nnoremap <C-Up> :silent! let &guifont = substitute(
     \ &guifont,
     \ ':h\zs\d\+',
     \ '\=eval(submatch(0)+1)',
     \ '')<CR>
    nnoremap <C-Down> :silent! let &guifont = substitute(
     \ &guifont,
     \ ':h\zs\d\+',
     \ '\=eval(submatch(0)-1)',
     \ '')<CR>
<

For example, the command :echo &guifont might show 
Bitstream_Vera_Sans_Mono:h12:b:cANSI.

The substitute pattern :h\zs\d\+ looks for :h followed by a number (one or 
more digits). The \zs marks the start of what is found (so it skips the :h).

The replacement string \=eval(submatch(0)+1) uses:

\=
Following is an expression to be evaluated.
submatch(0)
The text that matched (this example finds 12 with \d\+).

eval()

Evaluate the following string (12+1).

If you have multiple fonts listed, such as

:echo &guifont
Andale_Mono:h10,Menlo:h10,Consolas:h10

you can add 'g' to the last argument of the substitute command above to 
'globally' replace all the font sizes.

>
    nnoremap <C-Up> :silent! let &guifont = substitute(
     \ &guifont,
     \ ':h\zs\d\+',
     \ '\=eval(submatch(0)+1)',
     \ 'g')<CR>
    nnoremap <C-Down> :silent! let &guifont = substitute(
     \ &guifont,
     \ ':h\zs\d\+',
     \ '\=eval(submatch(0)-1)',
     \ 'g')<CR>
<

REFERENCES  *vwt-760-references*
    - :help  |sub-replace-expression|
    - :help  |eval()|


COMMENTS  *vwt-760-comments*