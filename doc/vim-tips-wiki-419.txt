*vim-tips-wiki-419.txt*   Auto-fold Perl subs                           *vtw-419*

Tip 419 [https://vim.fandom.com/wiki/Auto-fold_Perl_subs]   Previous |vtw-418| Next |vtw-425|

created 2003 · complexity intermediate · author Mina Naguib · version 7.0

==============================================================================

This tip is deprecated for the following reasons:

The patch mentioned below is outdated, does not apply cleanly to the Vim 7.3 
runtime, and encounters problems with hash literals. Until this is fixed, if 
the syntax folding bugs bother you, you can use one of the alternate methods 
listed below the main tip.

The `$VIMRUNTIME/syntax/perl.vim` file provided with Vim has a configurable 
option 
[https://vim.fandom.com/wiki/Check_your_syntax_files_for_configurable_options] 
that allows folding in Perl programs. To enable folding in files with "perl" 
filetype, put the following line in your vimrc 
[https://vim.fandom.com/wiki/Vimrc] (see :help |perl.vim| for more details):

>
    let perl_fold = 1
<

The Vim 7.2 `perl.vim` has some bugs. A patch is available 
[http://groups.google.com/group/vim_dev/browse_thread/thread/e2a54d22c728d04b].

ALTERNATIVES                                            *vtw-419-alternatives*

It is easier for most users to use the built-in procedure outlined above, but 
it is also possible to work around any issues you have with the built-in 
folding, using a plugin or directly writing and using a 'foldexpr'.

PLUGIN: SIMPLEFOLD                                *vtw-419-plugin:-simplefold*

If you are able to install scripts, the SimpleFold script 
[https://www.vim.org/scripts/script.php?script_id=1868] is very nice and 
supports Perl, among other languages.

Version 0.5 of this plugin does not support a lot of fold cases for Perl 
properly, however. Nevertheless, a simple patch 
[https://vim.fandom.com/wiki/Script:1868#Perl_support_fix] can fix it.

About the only thing that doesn’t work is lines which both close and open a 
block, e.g.:

>
    if (something) {
        stuff
    } elsif (somethingelse) {                 #this doesn’t work
       otherstuff
    }
<

This doesn't appear simple to fix, so you're better off just adding a line 
break and refolding (by default it calculates and sets folds with <leader>f ).

FOLDEXPR WORKAROUND                              *vtw-419-foldexpr-workaround*

Add this to your vimrc [https://vim.fandom.com/wiki/Vimrc] to automatically 
fold Perl functions. You may also like to modify the script for similar 
languages that define a subroutine with "sub ...".

>
    function GetPerlFold()
      if getline(v:lnum) =~ '^\s*sub\s'
        return ">1"
      elseif getline(v:lnum) =~ '\}\s*$'
        let my_perlnum = v:lnum
        let my_perlmax = line("$")
        while (1)
          let my_perlnum = my_perlnum + 1
          if my_perlnum > my_perlmax
            return "<1"
          endif
          let my_perldata = getline(my_perlnum)
          if my_perldata =~ '^\s*\(\#.*\)\?$'
            " do nothing
          elseif my_perldata =~ '^\s*sub\s'
            return "<1"
          else
            return "="
          endif
        endwhile
      else
        return "="
      endif
    endfunction
    setlocal foldexpr=GetPerlFold()
    setlocal foldmethod=expr
<

SEE ALSO                                                    *vtw-419-see-also*
    - Folding [https://vim.fandom.com/wiki/Folding] presents an overview of how to 
      use folding 


REFERENCES                                                *vtw-419-references*
    - :help |folding| 


COMMENTS                                                    *vtw-419-comments*

When `let perl_fold = 1` is used, the fold method (`:set fdm?`) will be 
"syntax", and you will not be able to use manual or marker folds. If wanted, 
you can change the fold method, for example, `:set foldmethod=manual`.

In other words, if you want vim to autofold perl subroutines, use `let 
perl_fold = 1` in your .vimrc. This automatically `set foldmethod=syntax` when 
you load a perl file, but if not, you can manually `set foldmethod=syntax` or 
put this command in a file in `$HOME/.vim/after/syntax` called `perl.vim` 
(create this directory and file if it does not yet exist).

==============================================================================

 vim:tw=78:et:ft=help:norl: