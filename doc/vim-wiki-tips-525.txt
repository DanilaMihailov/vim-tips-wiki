*vim-wiki-tips-525.txt*   JavaBeans helper function *vwt-525*



Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 525 [https://vim.fandom.com/wiki/JavaBeans_helper_function]   Previous |vwt-524| Next |vwt-526|

created 2003 · complexity intermediate · author Lech Ambrzykowski · version 
6.0

==============================================================================

This page is dodgy [https://vim.fandom.com/wiki/Category:Dodgy]. The contents 
may not be useful for Vim 7. If you think this tip is useful, please edit it 
to make the problem and its solution more understandable, and remove the 
{{Dodgy}} tag.

Another tip with no explanation, context, or even adequate description

This one helps creating beans. Nothing serious actually, but might come in 
handy.

>
    nnoremap <buffer> <silent>dc :call <SID>AddBean()<CR>
    function! s:AddBean()
      let line = line('.')
      let name = inputdialog('Enter the name of the variable: ')
      let type = inputdialog('Enter the type of the variable: ')
      let upperName = substitute(name, '^\(\w\)\(.*\)$', '\u\1\2', '')
      call append(line, "\t}")
      call append(line, "\t\tthis.".name." = ".name.";")
      call append(line, "\tpublic void set".upperName."(".type." ".name.") {")
      call append(line, "")
      call append(line, "\t}")
      call append(line, "\t\treturn (this.".name.");")
      call append(line, "\tpublic ".type." get"."".upperName."() { ")
      call append(line, "")
      call append(line, "\tprivate ".type." ".name.";")
      call append(line, "\t//".name)
      return line
    endfunction
<

COMMENTS  *vwt-525-comments*

You might be interested in 
http://www.ophinity.com/papers/wrangling/index.html#multiply 
[http://www.ophinity.com/papers/wrangling/index.html#multiply]

It's fairly generic but i use it to chug thru a list of values and apply 
those to a code-template. it lends itself to setters & getters.

==============================================================================

 vim:tw=78:et:ft=help:norl: