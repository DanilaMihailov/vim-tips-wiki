*vim-wiki-tips-7.txt*   Jumping to the start and end of a code block      *vwt-7*

Tip 7 [https://vim.fandom.com/wiki/Jumping_to_the_start_and_end_of_a_code_block]   Previous |vwt-6| Next |vwt-8|

created February 24, 2001 · complexity basic · author Yegappan · version 5.7

==============================================================================

To jump to the beginning of a C code block (while, switch, if etc), use the 
[{ command.

To jump to the end of a C code block (while, switch, if etc), use the ]} 
command.

The above two commands will work from anywhere inside the code block.

To jump to the beginning of a parenthesis use the [( command.

To jump to the end of a parenthesis use the ]) command.

REFERENCES                                                  *vwt-7-references*
    - :help |[{| 
    - :help |]}| 
    - :help |[(| 
    - :help |])| 


COMMENTS                                                      *vwt-7-comments*

Related to these motion commands are [[ and ]]
    - [[ : sections backward or to the previous '{' in the first column. 
    - ]] : sections forward or to the next '{' in the first column. 
    - [] : sections backward or to the previous '}' in the first column. 
    - ][ : sections forward or to the next '}' in the first column. 


This is particularly useful for jumping to the top of the functions and 
jumping from one function to the next function. For instance, the first 
command takes you to the beginning of the current function. The second command 
takes you to the beginning of the next function. The third takes you to the 
end of the previous function.

Certain coding conventions work better for this practice than others.

==============================================================================

To jump to the beginning/end of a function that does not have a "{" in the 
first column, there is a work around in the Vim documentation. Try ":help [[" 
and search for "map" in that text.

==============================================================================

What's the different between this and just searching "/ or ?" for the braces?

I thought this might be a smarter search, but "[{" will still match in open 
curlies inside a comment.

>
    /} will not work for nested {}.
<

==============================================================================The advantage is the following.  Say you want to go to the beginning of the block that the cursor is in.  between the cursor position and the beginning of the block, there may be several blocks at the same level as the cursor, so [{ will skip them, but ?{ won't.  This is even more useful if you want to go to the beginning of a block multiple levels above the cursor position, because there could be a lot more blocks that you want to skip.

 vim:tw=78:et:ft=help:norl: