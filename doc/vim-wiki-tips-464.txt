*vim-wiki-tips-464.txt*   Search and replace the word under the cursor *vwt-464*

Tip 464 [https://vim.fandom.com/wiki/Search_and_replace_the_word_under_the_cursor]   Previous |vwt-463| Next |vwt-465|

created 2003 · complexity intermediate · author maurice · version 6.0

==============================================================================

A good way to search and replace the word under the cursor is shown here 
[https://vim.fandom.com/wiki/Search_and_replace#substitute_last_search]. This 
tip simplifies such operations.

MANUAL PROCEDURE  *vwt-464-manual-procedure*

If you only have a few occurrences to change, you might prefer a manual 
technique which does not require a mapping. If all foo words need to be 
changed to bar:
    - Put the cursor on foo.
    - Press * to search for the next occurrence.
    - Type ciw (change inner word) then bar then press Escape.
    - Press n (move to next occurrence) then . (repeat change [https://vim.fandom.com/wiki/Repeat_last_change]).
    - Repeat last step.


MAPPING  *vwt-464-mapping*

With this mapping in your vimrc [https://vim.fandom.com/wiki/Vimrc], you can 
easily enter a command to substitute all occurrences of the word under the 
cursor:

>
    :nnoremap <Leader>s :%s/\<<C-r><C-w>\>/
<

Given this mapping, if the cursor is on the word foo and you press \s 
(assuming the default backslash Leader key), you will see:

>
    :%s/\<foo\>/
<

If you now type bar/g and press Enter, you will change all foo to bar. The \< 
and \> ensure that only complete words are found (the search finds foo but not 
food).

Alternatively, you could use this mapping so that the final /g is already 
entered:

>
    :nnoremap <Leader>s :%s/\<<C-r><C-w>\>//g<Left><Left>
<

SIMILAR CHANGES  *vwt-464-similar-changes*

Sometimes similar changes to several words are needed. For example, you might 
need < before each word, and > after (this specific example is probably best 
handled with the surround plugin 
[https://www.vim.org/scripts/script.php?script_id=1697], and is used here just 
as an illustration). One approach would be to record a macro 
[https://vim.fandom.com/wiki/Macros] that performs the operations required. 
The following alternative uses substitute commands.

If you know in advance what needs to be changed, you could use a suitable 
pattern. For example, the following changes all red and all blue words:

>
    :%s/\<\(<red>\|<blue>\)\>/<&>/g
<

The replacement is <&> where & has a special meaning: it is replaced by the 
search match.

The following mapping evaluates an expression to replace all occurrences of 
the word that is currently under the cursor. Move the cursor to a word, then 
press F8 to change all occurrences of that word. Then move to another word and 
press F8 again.

>
    :nnoremap <expr> <F8> ':%s/\<'.expand('<cword>').'\>/<&>/g<CR>'
<

REFERENCES  *vwt-464-references*
    - :help  |c_CTRL-R|
    - :help  |c_CTRL-R_CTRL-W|
    - :help  |cursor-position|
    - :help  |mapleader|


SEE ALSO  *vwt-464-see-also*
    - Search and replace |vwt-31| (comprehensive "see also" list)
    - Keystroke Saving Substituting and Searching |vwt-159|
    - Substitute last search |vwt-1501|


COMMENTS  *vwt-464-comments*