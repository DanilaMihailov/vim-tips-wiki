*vim-wiki-tips-1032.txt*   Decode MIME text using Perl in Vim *vwt-1032*





This tip is very similar to the following:
    - VimTip1134 |vwt-1134|


These tips need to be merged – see the merge guidelines 
[https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].

Please review this tip:
    - This tip was imported from vim.org and needs general review [https://vim.fandom.com/wiki/Vim_Tips_Wiki:General_guidelines].
    - You might clean up comments [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Comment_guidelines] or merge similar tips [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Merge_guidelines].
    - Add suitable categories [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Category_guidelines] so people can find the tip.
    - Please avoid the discussion page [https://vim.fandom.com/wiki/Vim_Tips_Wiki:Discussion_guidelines] (use the Comments section below for notes).
    - If the tip contains good advice for current Vim, remove the {{review}} line.
Tip 1032 [https://vim.fandom.com/wiki/Decode_MIME_text_using_Perl_in_Vim]   Previous |vwt-1031| Next |vwt-1033|

created 2005 · complexity intermediate · author Suresh Govindachar · version 
6.0

==============================================================================

Requires: Vim 6.x with Perl support. Uses Perl module MIME::Base64.

If you have MIME Base64 or Quoted-Printable encoded text in a Vim buffer, the 
following commands can be used to replace the encoded lines with their decoded 
information. Just visually select the lines corresponding to the encoded text 
and issue the appropriate command (:Decode64 or :DecodeQP).

>
    command! -range=% Decode64 :w | <line1>,<line2>delete | let foo = @"
     \| perl use MIME::Base64 (); my $foo=VIM::Eval(foo); my ($r, $c)=$curwin->Cursor(); $curbuf->Append($r-1, split '\n', MIME::Base64::decode($foo));
    
    command! -range=% DecodeQP :w | <line1>,<line2>delete | let foo = @"
     \| perl use MIME::QuotedPrint (); my $foo=VIM::Eval(foo); my ($r, $c)=$curwin->Cursor(); $curbuf->Append($r-1, split '\n', MIME::QuotedPrint::decode_qp($foo));
<

COMMENTS  *vwt-1032-comments*

 vim:tw=78:et:ft=help:norl: